{"ast":null,"code":"var _jsxFileName = \"/Users/christopherbrindle/Documents/tfs2/tfs2-frontend/src/Components/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport Nav from '../Nav/Nav';\nimport mainBG from '../../images/ancient-bg.jpg';\nimport scroll from '../../images/scroll.png';\nimport SignupInput from './Input';\nimport Notifications, { notify } from 'react-notify-toast';\nimport { signUp } from '../../redux/actions/authActions';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: []\n    };\n\n    this.handleSignUp = async () => {\n      if (document.querySelector(`#name`).value === '') {\n        this.setState({\n          errors: [...this.state.errors, \"Name field must be filled in\"]\n        });\n      } else if (document.querySelector(`#email`).value === '') {\n        this.setState({\n          errors: [...this.state.errors, \"Email field must be filled in\"]\n        });\n      } else if (document.querySelector(`#password1`).value === '' || document.querySelector(`#password2`).value === '') {\n        this.setState({\n          errors: [...this.state.errors, \"Both password fields must be filled in\"]\n        });\n      } else if (document.querySelector(`#password1`).value !== document.querySelector(`#password2`).value) {\n        this.setState({\n          errors: [...this.state.errors, \"Password fields MUST match\"]\n        });\n      }\n\n      if (this.state.errors.length > 0) {\n        console.log(`ERRORS: `, this.state.errors.length);\n        return;\n      }\n\n      const data = {\n        name: document.querySelector(`#name`).value,\n        email: document.querySelector(`#email`).value,\n        password: document.querySelector(`#password1`).value\n      };\n\n      try {\n        const success = await this.props.signUp(data);\n        console.log(success);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Notifications, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: centerSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: scrollInterior,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"name\",\n      inputName: \"name\",\n      inputType: \"text\",\n      inputPlaceholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"email\",\n      inputName: \"email\",\n      inputType: \"text\",\n      inputPlaceholder: \"Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"password1\",\n      inputName: \"password1\",\n      inputType: \"password\",\n      inputPlaceholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"password2\",\n      inputName: \"password2\",\n      inputType: \"password\",\n      inputPlaceholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: signupButton,\n      onClick: this.handleSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Sign Up\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps, {\n  signUp\n})(Signup);\nconst main = css`\n    height: 93vh;\n    width: 100vw;\n    background-image: url('${mainBG}');\n    background-size: 100% 100%;\n    display: grid;\n    grid-template-rows: 3% 94% 3%;\n    grid-template-columns: 25% 50% 25%;\n`;\nconst centerSection = css`\n    grid-area: 2 / 2 / span 1 / span 1;\n    background-image: url('${scroll}');\n    background-size: 100% 120%;\n    background-position: center;\n`;\nconst scrollInterior = css`\n    height: 75%;\n    margin: 11% 19% 0 17%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst signupButton = css`\n    border: 2px solid darkgreen;\n    background-color: olivedrab;\n    color: white;\n    font-weight: bold;\n    height: 7vh;\n    width: 15vw;\n    border-radius: 5px;\n    font-family: fantasy;\n    font-size: 1em;\n    cursor: pointer;\n    margin-top: 3vh;\n    box-shadow: 3px 3px black;\n`;","map":{"version":3,"sources":["/Users/christopherbrindle/Documents/tfs2/tfs2-frontend/src/Components/Signup/Signup.js"],"names":["React","Component","connect","css","Nav","mainBG","scroll","SignupInput","Notifications","notify","signUp","Signup","state","errors","handleSignUp","document","querySelector","value","setState","length","console","log","data","name","email","password","success","props","err","render","main","centerSection","scrollInterior","signupButton","mapStateToProps","auth","authReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport Nav from '../Nav/Nav';\nimport mainBG from '../../images/ancient-bg.jpg';\nimport scroll from '../../images/scroll.png';\nimport SignupInput from './Input';\nimport Notifications, { notify } from 'react-notify-toast';\n\nimport { signUp } from '../../redux/actions/authActions';\n\nclass Signup extends Component {\n\n    state = {\n        errors: []\n    }\n\n    handleSignUp = async () => {\n        if (document.querySelector(`#name`).value === '') {\n            this.setState({\n                errors: [...this.state.errors, \"Name field must be filled in\"]\n            });\n        } else if (document.querySelector(`#email`).value === '') {\n            this.setState({\n                errors: [...this.state.errors, \"Email field must be filled in\"]\n            });\n        } else if (document.querySelector(`#password1`).value === '' || document.querySelector(`#password2`).value === '') {\n            this.setState({\n                errors: [...this.state.errors, \"Both password fields must be filled in\"]\n            });\n        } else if (document.querySelector(`#password1`).value !== document.querySelector(`#password2`).value) {\n            this.setState({\n                errors: [...this.state.errors, \"Password fields MUST match\"]\n            })\n        }\n\n\n        if (this.state.errors.length > 0) {\n            console.log(`ERRORS: `, this.state.errors.length);\n            return\n        }\n\n        const data = {\n            name: document.querySelector(`#name`).value,\n            email: document.querySelector(`#email`).value,\n            password: document.querySelector(`#password1`).value\n        }\n        try {\n            const success = await this.props.signUp(data);\n            console.log(success);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <Nav />\n\n                <div className={main}>\n                    <Notifications />\n\n                    <div className={centerSection}>\n                        <div className={scrollInterior}>\n                            <SignupInput\n                                inputID=\"name\"\n                                inputName=\"name\"\n                                inputType=\"text\"\n                                inputPlaceholder=\"Name\"\n                            />\n\n                            <SignupInput\n                                inputID=\"email\"\n                                inputName=\"email\"\n                                inputType=\"text\"\n                                inputPlaceholder=\"Email Address\"\n                            />\n\n                            <SignupInput\n                                inputID=\"password1\"\n                                inputName=\"password1\"\n                                inputType=\"password\"\n                                inputPlaceholder=\"Password\"\n                            />\n\n                            <SignupInput\n                                inputID=\"password2\"\n                                inputName=\"password2\"\n                                inputType=\"password\"\n                                inputPlaceholder=\"Confirm Password\"\n                            />\n\n                            <button type=\"button\" className={signupButton} onClick={this.handleSignUp}>Sign Up</button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.authReducer\n})\n\nexport default connect(mapStateToProps, { signUp })(Signup)\n\n\n\nconst main = css`\n    height: 93vh;\n    width: 100vw;\n    background-image: url('${mainBG}');\n    background-size: 100% 100%;\n    display: grid;\n    grid-template-rows: 3% 94% 3%;\n    grid-template-columns: 25% 50% 25%;\n`\nconst centerSection = css`\n    grid-area: 2 / 2 / span 1 / span 1;\n    background-image: url('${scroll}');\n    background-size: 100% 120%;\n    background-position: center;\n`\nconst scrollInterior = css`\n    height: 75%;\n    margin: 11% 19% 0 17%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst signupButton = css`\n    border: 2px solid darkgreen;\n    background-color: olivedrab;\n    color: white;\n    font-weight: bold;\n    height: 7vh;\n    width: 15vw;\n    border-radius: 5px;\n    font-family: fantasy;\n    font-size: 1em;\n    cursor: pointer;\n    margin-top: 3vh;\n    box-shadow: 3px 3px black;\n`"]},"metadata":{},"sourceType":"module"}