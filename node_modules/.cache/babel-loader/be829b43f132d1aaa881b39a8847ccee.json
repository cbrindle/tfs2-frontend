{"ast":null,"code":"var _jsxFileName = \"/Users/christopherbrindle/Documents/tfs2/tfs2-frontend/src/Components/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport Nav from '../Nav/Nav';\nimport mainBG from '../../images/ancient-bg.jpg';\nimport scroll from '../../images/scroll.png';\nimport SignupInput from './Input';\nimport Notifications, { notify } from 'react-notify-toast';\nimport { signUp } from '../../redux/actions/authActions';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSignUp = async () => {\n      if (document.querySelector(`#name`).value === '') {\n        notify.show(\"Name field must be filled in\", \"error\", 3000);\n        return;\n      } else if (document.querySelector(`#email`).value === '') {\n        notify.show(\"Email field must be filled in\", \"error\", 3000);\n        return;\n      } else if (!document.querySelector(`#email`).value.includes('@')) {\n        notify.show(\"Please enter a valid email address\", \"error\", 3000);\n        return;\n      } else if (document.querySelector(`#password1`).value === '' || document.querySelector(`#password2`).value === '') {\n        notify.show(\"Both password fields must be filled in\", \"error\", 3000);\n        return;\n      } else if (document.querySelector(`#password1`).value !== document.querySelector(`#password2`).value) {\n        notify.show(\"Both passwords MUST match\", 3000);\n        return;\n      }\n\n      const data = {\n        name: document.querySelector(`#name`).value,\n        email: document.querySelector(`#email`).value,\n        password: document.querySelector(`#password1`).value\n      };\n\n      try {\n        const success = await this.props.signUp(data);\n        notify.show(`Account successfully created for ${success.newUser.name}. Redirecting to Log In page...`, \"success\", 3000);\n        setInterval(() => {\n          this.props.history.push('/signin');\n        }, 3200);\n        return;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Notifications, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: centerSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: scrollInterior,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"name\",\n      inputName: \"name\",\n      inputType: \"text\",\n      inputPlaceholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"email\",\n      inputName: \"email\",\n      inputType: \"text\",\n      inputPlaceholder: \"Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"password1\",\n      inputName: \"password1\",\n      inputType: \"password\",\n      inputPlaceholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SignupInput, {\n      inputID: \"password2\",\n      inputName: \"password2\",\n      inputType: \"password\",\n      inputPlaceholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: signupButton,\n      onClick: this.handleSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Sign Up\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps, {\n  signUp\n})(Signup);\nconst main = css`\n    height: 93vh;\n    width: 100vw;\n    background-image: url('${mainBG}');\n    background-size: 100% 100%;\n    display: grid;\n    grid-template-rows: 3% 94% 3%;\n    grid-template-columns: 25% 50% 25%;\n`;\nconst centerSection = css`\n    grid-area: 2 / 2 / span 1 / span 1;\n    background-image: url('${scroll}');\n    background-size: 100% 120%;\n    background-position: center;\n`;\nconst scrollInterior = css`\n    height: 75%;\n    margin: 11% 19% 0 17%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst signupButton = css`\n    border: 2px solid darkgreen;\n    background-color: olivedrab;\n    color: white;\n    font-weight: bold;\n    height: 7vh;\n    width: 15vw;\n    border-radius: 5px;\n    font-family: fantasy;\n    font-size: 1em;\n    cursor: pointer;\n    margin-top: 3vh;\n    box-shadow: 3px 3px black;\n`;","map":{"version":3,"sources":["/Users/christopherbrindle/Documents/tfs2/tfs2-frontend/src/Components/Signup/Signup.js"],"names":["React","Component","connect","css","Nav","mainBG","scroll","SignupInput","Notifications","notify","signUp","Signup","handleSignUp","document","querySelector","value","show","includes","data","name","email","password","success","props","newUser","setInterval","history","push","err","console","log","render","main","centerSection","scrollInterior","signupButton","mapStateToProps","state","auth","authReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport Nav from '../Nav/Nav';\nimport mainBG from '../../images/ancient-bg.jpg';\nimport scroll from '../../images/scroll.png';\nimport SignupInput from './Input';\nimport Notifications, { notify } from 'react-notify-toast';\n\nimport { signUp } from '../../redux/actions/authActions';\n\nclass Signup extends Component {\n\n    handleSignUp = async () => {\n        if (document.querySelector(`#name`).value === '') {\n            notify.show(\"Name field must be filled in\", \"error\", 3000);\n            return\n        } else if (document.querySelector(`#email`).value === '') {\n            notify.show(\"Email field must be filled in\", \"error\", 3000);\n            return\n        } else if (!document.querySelector(`#email`).value.includes('@')) {\n            notify.show(\"Please enter a valid email address\", \"error\", 3000)\n            return\n        } else if (document.querySelector(`#password1`).value === '' || document.querySelector(`#password2`).value === '') {\n            notify.show(\"Both password fields must be filled in\", \"error\", 3000);\n            return\n        } else if (document.querySelector(`#password1`).value !== document.querySelector(`#password2`).value) {\n            notify.show(\"Both passwords MUST match\", 3000);\n            return\n        }\n\n        const data = {\n            name: document.querySelector(`#name`).value,\n            email: document.querySelector(`#email`).value,\n            password: document.querySelector(`#password1`).value\n        }\n        try {\n            const success = await this.props.signUp(data);\n            notify.show(`Account successfully created for ${success.newUser.name}. Redirecting to Log In page...`, \"success\", 3000);\n            setInterval(() => {\n                this.props.history.push('/signin');\n            }, 3200);\n            return\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <Nav />\n\n                <div className={main}>\n                    <Notifications />\n\n                    <div className={centerSection}>\n                        <div className={scrollInterior}>\n                            <SignupInput\n                                inputID=\"name\"\n                                inputName=\"name\"\n                                inputType=\"text\"\n                                inputPlaceholder=\"Name\"\n                            />\n\n                            <SignupInput\n                                inputID=\"email\"\n                                inputName=\"email\"\n                                inputType=\"text\"\n                                inputPlaceholder=\"Email Address\"\n                            />\n\n                            <SignupInput\n                                inputID=\"password1\"\n                                inputName=\"password1\"\n                                inputType=\"password\"\n                                inputPlaceholder=\"Password\"\n                            />\n\n                            <SignupInput\n                                inputID=\"password2\"\n                                inputName=\"password2\"\n                                inputType=\"password\"\n                                inputPlaceholder=\"Confirm Password\"\n                            />\n\n                            <button type=\"button\" className={signupButton} onClick={this.handleSignUp}>Sign Up</button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.authReducer\n})\n\nexport default connect(mapStateToProps, { signUp })(Signup)\n\n\n\nconst main = css`\n    height: 93vh;\n    width: 100vw;\n    background-image: url('${mainBG}');\n    background-size: 100% 100%;\n    display: grid;\n    grid-template-rows: 3% 94% 3%;\n    grid-template-columns: 25% 50% 25%;\n`\nconst centerSection = css`\n    grid-area: 2 / 2 / span 1 / span 1;\n    background-image: url('${scroll}');\n    background-size: 100% 120%;\n    background-position: center;\n`\nconst scrollInterior = css`\n    height: 75%;\n    margin: 11% 19% 0 17%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst signupButton = css`\n    border: 2px solid darkgreen;\n    background-color: olivedrab;\n    color: white;\n    font-weight: bold;\n    height: 7vh;\n    width: 15vw;\n    border-radius: 5px;\n    font-family: fantasy;\n    font-size: 1em;\n    cursor: pointer;\n    margin-top: 3vh;\n    box-shadow: 3px 3px black;\n`"]},"metadata":{},"sourceType":"module"}