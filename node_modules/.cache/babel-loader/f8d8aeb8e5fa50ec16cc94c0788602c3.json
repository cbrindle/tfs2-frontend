{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport { LOGIN, LOGOUT, SIGNUP, AUTHCHECKER, GETPROFILE } from '../constants/authConstants';\nimport Axios from '../../Components/lib/Axios/Axios';\nimport setAuthToken from '../../Components/lib/Axios/setAuthToken';\nexport const signUp = data => async dispatch => {\n  try {\n    const success = await Axios.post('/api/users/signup', data);\n    dispatch({\n      type: SIGNUP,\n      payload: success.data\n    });\n    return success.data;\n  } catch (err) {\n    return err;\n  }\n};\nexport const login = data => async dispatch => {\n  try {\n    const success = await Axios.post('/api/users/login', data);\n    console.log(success.data);\n    const {\n      token\n    } = success.data;\n    setAuthToken(token);\n    localStorage.setItem('jwt-user-token', token);\n    dispatch({\n      type: LOGIN,\n      payload: success.data\n    });\n    return {\n      error: false\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      error: true\n    };\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.removeItem('jwt-user-token');\n    dispatch({\n      type: LOGOUT,\n      payload: ''\n    });\n    return;\n  } catch (err) {\n    return err;\n  }\n};\nexport const authChecker = data => async dispatch => {\n  try {\n    const decoded = jwt_decode(data);\n    dispatch({\n      type: AUTHCHECKER,\n      payload: decoded\n    });\n  } catch (err) {}\n};\nexport const getProfile = () => async dispatch => {\n  try {\n    const token = localStorage.getItem('jwt-user-token');\n    const decoded = jwt_decode(token);\n    const success = await Axios.get(`/api/users/get-profile/${decoded.id}`);\n    dispatch({\n      type: GETPROFILE,\n      payload: ''\n    });\n    return success.data;\n  } catch (err) {\n    return err;\n  }\n};","map":{"version":3,"sources":["/Users/christopherbrindle/Documents/tfs2/tfs2-frontend/src/redux/actions/authActions.js"],"names":["jwt_decode","LOGIN","LOGOUT","SIGNUP","AUTHCHECKER","GETPROFILE","Axios","setAuthToken","signUp","data","dispatch","success","post","type","payload","err","login","console","log","token","localStorage","setItem","error","logout","removeItem","authChecker","decoded","getProfile","getItem","get","id"],"mappings":"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","sourcesContent":["import jwt_decode from 'jwt-decode';\nimport { LOGIN, LOGOUT, SIGNUP, AUTHCHECKER, GETPROFILE } from '../constants/authConstants';\n\nimport Axios from '../../Components/lib/Axios/Axios';\nimport setAuthToken from '../../Components/lib/Axios/setAuthToken';\n\n\nexport const signUp = (data) => async dispatch => {\n    try {\n        const success = await Axios.post('/api/users/signup', data);\n        dispatch({\n            type: SIGNUP,\n            payload: success.data\n        });\n        return success.data\n    } catch (err) {\n        return err\n    }\n}\n\n\nexport const login = (data) => async dispatch => {\n    try {\n        const success = await Axios.post('/api/users/login', data);\n        console.log(success.data);\n        const { token } = success.data\n        setAuthToken(token);\n        localStorage.setItem('jwt-user-token', token);\n        dispatch({\n            type: LOGIN,\n            payload: success.data\n        });\n        return {\n            error: false\n        }\n    } catch (err) {\n        console.log(err);\n        return {\n            error: true\n        }\n    }\n}\n\n\nexport const logout = () => async dispatch => {\n    try {\n        localStorage.removeItem('jwt-user-token');\n        dispatch({\n            type: LOGOUT,\n            payload: ''\n        })\n        return\n    } catch (err) {\n        return err\n    }\n}\n\n\nexport const authChecker = (data) => async dispatch => {\n    try {\n        const decoded = jwt_decode(data);\n        dispatch({\n            type: AUTHCHECKER,\n            payload: decoded\n        })\n    } catch (err) {\n\n    }\n}\n\n\nexport const getProfile = () => async dispatch => {\n    try {\n        const token = localStorage.getItem('jwt-user-token');\n        const decoded = jwt_decode(token);\n        const success = await Axios.get(`/api/users/get-profile/${decoded.id}`);\n        dispatch({\n            type: GETPROFILE,\n            payload: ''\n        })\n        return success.data;\n    } catch (err) {\n        return err\n    }\n}"]},"metadata":{},"sourceType":"module"}